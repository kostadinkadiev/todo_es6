{"version":3,"sources":["es6/app.js"],"names":[],"mappings":";;;;;;;;gCAAsD,mBAAmB;;yBACnD,aAAa;;;;AAEnC,IAAM,KAAK,GAAG,EAAE,CAAC;;IAEX,OAAO;AAEA,WAFP,OAAO,GAEG;0BAFV,OAAO;;AAGT,QAAI,CAAC,SAAS,GAAG,4BAAe,CAAC;;AAEjC,KAAC,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC;AACxB,YAAM,EAAE,GAAG;;AAEX,YAAM,EAAE,IAAI;KACb,CAAC,CAAC;GACJ;;eAVG,OAAO;;WAYL,gBAAC,MAAM,EAAE,OAAO,EAAE;AACtB,UAAG,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IACrD,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;AACtB,YAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;OACtC;KACF;;;WAEM,iBAAC,IAAI,EAAE,OAAO,EAAE;AACrB,UAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;AAC5C,YAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9C,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,eAAO,CAAC,KAAK,GAAG,IAAI,CAAC;OACtB;KACF;;;WAEO,kBAAC,IAAI,EAAE;AACb,UAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACpB;;;WAES,oBAAC,IAAI,EAAE;AACf,UAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;WAEO,kBAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE;AAC3B,UAAI,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACvC,UAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;AAEpB,UAAI,UAAU,EAAE;AACd,YAAI,CAAC,IAAI,GAAG,UAAU,CAAC;AACvB,YAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;OAC9B,MACI;AACH,eAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;OAClC;KACF;;;WAEa,wBAAC,IAAI,EAAE;;AAEnB,UAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;AACvB,UAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAChD,aAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA,AAAC,CAAC,GAAG,CAAC,CAAC;KACrD;;;SArDG,OAAO;;;AAyDb,OAAO,CAAC,WAAW,GAAG,CAEpB,gCAAc;AACZ,UAAQ,EAAE,UAAU;CACrB,CAAC,EACF,2BAAS;AACP,aAAW,EAAE,cAAc;AAC3B,YAAU,EAAE,iDAAa;CAC1B,CAAC,CAEH,CAAC;;AAEF,iCAAU,OAAO,CAAC,CAAC","file":"es6/app.js","sourcesContent":["import {bootstrap, Component, View, NgIf, NgFor} from 'angular2/angular2';\r\nimport ToDoStore from './todostore';\r\n\r\nconst ENTER = 13;\r\n\r\nclass ToDoApp {\r\n\r\n  constructor() {\r\n    this.toDoStore = new ToDoStore();\r\n\r\n    $(\".date\").datetimepicker({\r\n      format: 'L',\r\n      //minDate: new Date(new Date() - 24*60*60*1000),\r\n      locale: 'mk'\r\n    });\r\n  }\r\n\r\n  typing($event, newdate) {\r\n    if($event.which === ENTER && $event.target.value.trim() && \r\n      newdate.value.trim()) {\r\n      this.addToDo($event.target, newdate);\r\n    }\r\n  }\r\n\r\n  addToDo(todo, newdate) {\r\n    if(todo.value.trim() && newdate.value.trim()) {\r\n      this.toDoStore.add(todo.value, newdate.value);\r\n      todo.value = null;\r\n      newdate.value = null;\r\n    }\r\n  }\r\n\r\n  editToDo(todo) {\r\n    todo.isEdit = true;\r\n  }\r\n\r\n  cancelEdit(todo) { \r\n    todo.isEdit = false; \r\n  }\r\n\r\n  saveEdit(edittodo, id, todo) {\r\n    let editedText = edittodo.value.trim();\r\n    todo.isEdit = false;\r\n\r\n    if (editedText) {\r\n      todo.text = editedText;\r\n      this.toDoStore.updateStore();\r\n    }\r\n    else {\r\n      return this.toDoStore.remove(id);\r\n    }\r\n  }\r\n\r\n  getOverdueDays(date) {\r\n\r\n    let today = new Date();\r\n    let timeDiff = today.getTime() - date.getTime();\r\n    return Math.ceil(timeDiff / (1000 * 3600 * 24)) - 1;\r\n  }\r\n\r\n}\r\n\r\nToDoApp.annotations = [\r\n\r\n  new Component({\r\n    selector: 'todo-app'\r\n  }), \r\n  new View({\r\n    templateUrl: 'todoapp.html',\r\n    directives: [NgIf, NgFor]\r\n  })\r\n\r\n];\r\n\r\nbootstrap(ToDoApp);"]}